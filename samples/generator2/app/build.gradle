plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    //id 'kotlin-kapt'
    id 'com.google.devtools.ksp'
    id 'com.google.dagger.hilt.android'
    id 'com.google.gms.google-services'
    //id 'androidx.baselineprofile'

    id 'io.github.skeptick.libres'

    //id 'org.jetbrains.kotlin.plugin.serialization'

// Apply the Bugsnag plugin
//    id  'com.bugsnag.android.gradle'

}

android {

    kotlinOptions {
        freeCompilerArgs += [
                "-P",
                "plugin:androidx.compose.compiler.plugins.kotlin:metricsDestination=" + project.buildDir.absolutePath + "/compose_metrics"
        ]
        freeCompilerArgs += [
                "-P",
                "plugin:androidx.compose.compiler.plugins.kotlin:reportsDestination=" + project.buildDir.absolutePath + "/compose_metrics"
        ]
    }

    signingConfigs {
        debug {
            storeFile file('D:\\AndroidKey\\MyKey.jks')
            //storeFile file('/home/ivan/Android/AndroidKey/MyKey.jks')
            storePassword '11111111'
            keyAlias 'Sakamoto'
            keyPassword '11111111'
        }
        release {
            storeFile file('D:\\AndroidKey\\MyKey.jks')
            storePassword '11111111'
            keyPassword '11111111'
            keyAlias 'Sakamoto'
        }
    }

    compileSdk 34

    namespace 'com.example.generator2'

    defaultConfig {
        applicationId "com.example.generator2"
        minSdk 24
        targetSdk 34
        versionCode 2007
        versionName "2.0.0.7"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        splits {
            abi {
                reset()
                //noinspection ChromeOsAbiSupport
                include "x86", "arm64-v8a", "armeabi-v7a", "x86_64"
                universalApk true //generate an additional APK that contains all the ABIs
            }
        }

        signingConfig signingConfigs.release
        externalNativeBuild {
            cmake {
                cppFlags ''
            }
        }


//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
//            }
//        }

//        ksp {
//            arg('room.schemaLocation', "$projectDir/src/main/java/com/example/schemas")
//        }

//        externalNativeBuild {
//            cmake {
//                cppFlags ''
//            }
//        }


    }

    buildTypes {

        release {

            debuggable false

            //shrinkResources false //уменьшение ресурсов

            minifyEnabled true //false

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            signingConfig signingConfigs.debug
            debuggable true

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'benchmark-rules.pro'
        }

        benchmark {
            initWith buildTypes.release //
            signingConfig signingConfigs.debug
            matchingFallbacks = ['release']
            debuggable false
            //proguardFiles "benckmark-rules.pro"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'benchmark-rules.pro'

        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    buildFeatures {
        compose true
        prefab true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.12"
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.22.1'
        }
    }

    defaultConfig {
        renderscriptTargetApi 24
        renderscriptSupportModeEnabled true
    }

}

dependencies {

    //implementation("com.android.tools.lint:lint-gradle:31.0.2")


    //https://developer.android.com/studio/preview/features
    implementation 'androidx.compose.runtime:runtime-tracing:1.0.0-beta01'

    implementation 'androidx.core:core-ktx:1.12.0'

    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.0'
    implementation 'androidx.activity:activity-compose:1.9.0'



    //testImplementation 'junit:junit:4.13.2'
    //androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    //androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    //androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.6.6"

    //implementation 'androidx.benchmark:benchmark-macro-junit4:1.1.1'

    implementation 'androidx.profileinstaller:profileinstaller:1.3.1'
    implementation "androidx.startup:startup-runtime:1.1.1"

    implementation 'com.snatik:storage:2.1.0'


    //Копирование Assert в папку
    //https://github.com/morristech/android-assetcopier
    implementation 'com.github.flipagram:android-assetcopier:0.1.1'


    //implementation "com.orhanobut:hawk:2.0.1"

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.appcompat:appcompat-resources:1.6.1'

    //implementation("io.coil-kt:coil-compose:2.2.2")
    //implementation("io.coil-kt:coil-gif:2.2.2")

    //implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"

    //Кастомные слайдеры
    //https://github.com/SmartToolFactory/Compose-Colorful-Sliders
    //implementation 'com.github.SmartToolFactory:Compose-Colorful-Sliders:1.0.1'

    //Кастомные слайдеры
    //https://github.com/krottv/compose-sliders
    //implementation "com.github.krottv:compose-sliders:0.1.14"

    //Обработчик нажатий
    //https://github.com/SmartToolFactory/Compose-Extended-Gestures
    implementation 'com.github.SmartToolFactory:Compose-Extended-Gestures:1.0.0'

    //implementation 'com.github.seniorjoinu:reliable-udp:0.3.1' //Udp

    implementation 'com.google.code.gson:gson:2.10.1'

    //Цвета
    //https://materialui.co/colors/
    //https://github.com/PatilSiddhesh/Holi
    implementation 'com.siddroid:holi:1.0.1'

    //Разрешения
    //https://github.com/alexstyl/warden
    implementation 'com.alexstyl:warden:1.0.0-alpha2'

///////////////////
    //Compose
    implementation "androidx.compose.ui:ui-android:$compose_version"
    implementation "androidx.compose.material:material-android:$compose_version"
    implementation 'androidx.compose.material3:material3:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    //implementation project(':library')
    //implementation project(':library')
    //baselineProfile project(':baselineprofile')
    //implementation project(':audiostreams')

    debugImplementation "androidx.compose.ui:ui-tooling-android:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview-android:$compose_version"
    implementation "androidx.compose.ui:ui-util-android:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"

    implementation "androidx.compose.animation:animation-android:$compose_version"
    implementation "androidx.compose.animation:animation-core-android:$compose_version"
    implementation "androidx.compose.animation:animation-graphics-android:$compose_version"

///////////////////
    //accompanist
    implementation 'com.google.accompanist:accompanist-navigation-animation:0.34.0'
    implementation 'com.google.accompanist:accompanist-drawablepainter:0.34.0'
    implementation 'com.google.accompanist:accompanist-webview:0.34.0'
    implementation 'com.google.accompanist:accompanist-pager:0.34.0'
    implementation 'com.google.accompanist:accompanist-systemuicontroller:0.34.0'
    implementation 'com.google.accompanist:accompanist-permissions:0.34.0'
///////////////////
    //lottie анимация
    //implementation 'com.airbnb.android:lottie:5.2.0'
    //implementation 'com.airbnb.android:lottie-compose:5.2.0'
///////////////////
    //Hilt
    implementation 'com.google.dagger:hilt-android:2.51'
    implementation 'androidx.hilt:hilt-navigation-compose:1.2.0'
    ksp 'com.google.dagger:hilt-compiler:2.51'
    //implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03'
    ksp 'androidx.hilt:hilt-compiler:1.2.0'

    implementation("it.czerwinski.android.hilt:hilt-extensions:1.4.0")
    ksp("it.czerwinski.android.hilt:hilt-processor-ksp:1.4.0")

///////////////////

    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.8.0'

    //Навигация
    implementation 'androidx.navigation:navigation-compose:2.7.7'

    //https://github.com/tfaki/ComposableSweetToast?ref=androidexample365.com
    implementation 'com.github.tfaki:ComposableSweetToast:1.0.1'

    //ZIP https://github.com/arnab-kundu/Storage
    //mplementation 'com.github.arnab-kundu:Storage:1.0.2'


    //Google Sign-In for Android
//    implementation 'com.google.android.gms:play-services-auth:20.4.1'
//    implementation 'com.google.android.gms:play-services-location:21.0.1'

    // Import the Firebase BoM
//    implementation platform('com.google.firebase:firebase-bom:31.1.1')

    // Add the dependency for the Firebase SDK for Google Analytics
//    implementation 'com.google.firebase:firebase-analytics-ktx:21.2.0'

    // TODO: Add the dependencies for any other Firebase products you want to use
    // See https://firebase.google.com/docs/android/setup#available-libraries
    // For example, add the dependencies for Firebase Authentication and Cloud Firestore
//    implementation 'com.google.firebase:firebase-auth-ktx:21.1.0'//Аутентификация
//    implementation 'com.google.firebase:firebase-firestore-ktx:24.4.4' //Облако Firestore
//    implementation 'com.google.firebase:firebase-storage-ktx:20.1.0'  //Облачное хранилище
//    implementation 'com.google.firebase:firebase-auth:21.1.0'
//    implementation 'com.firebaseui:firebase-ui-auth:8.0.2'

    //splashscreen
    //implementation("androidx.core:core-splashscreen:1.0.0")

    //https://github.com/vincentrussell/java-ini-parser
    //implementation "com.github.vincentrussell:java-ini-parser:1.3"
    implementation 'commons-io:commons-io:20030203.000550'
    implementation 'org.apache.commons:commons-lang3:3.14.0'

    implementation 'com.github.yagmurerdogan:Toastic:1.0.1'

    //Поддержка md
    //https://github.com/jeziellago/compose-markdown
    implementation 'com.github.jeziellago:compose-markdown:0.3.1'

    implementation 'com.jakewharton.timber:timber:5.0.1'


    implementation "com.github.adrielcafe.pufferdb:core:1.1.1"
    implementation "com.github.adrielcafe.pufferdb:android:1.1.1"
    //implementation "com.github.adrielcafe.pufferdb:coroutines:1.1.1"

    //implementation 'com.tencent:mmkv:1.3.2'

    //implementation 'com.dropbox.core:dropbox-core-sdk:5.4.4'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.9.23'

    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.14'


    //implementation "io.karn:notify:1.4.0"

    //implementation 'com.github.jojoyel:head-up-banner:1.0.0'


    // Core (required)
    implementation "com.github.adrielcafe.satchel:satchel-core:1.0.3"
    // Storers
    implementation "com.github.adrielcafe.satchel:satchel-storer-encrypted-file:1.0.3"

    //https://github.com/aclassen/ComposeReorderable
    implementation("org.burnoutcrew.composereorderable:reorderable:0.9.6")

    //https://github.com/a914-gowtham/compose-ratingbar
    //implementation 'com.github.a914-gowtham:compose-ratingbar:1.3.4'


    //implementation 'dev.ricknout.composesensors:composesensors:0.2.0'

    //f6c5d62e-e201-4d03-8322-b7e738a4759f
    // AppMetrica SDK.
    implementation 'com.yandex.android:mobmetricalib:5.3.0'
    implementation 'com.yandex.android:mobmetricalib-ndk-crashes:2.0.0'

    implementation 'com.github.varungulatii:Kdownloader:1.0.4'

    def media3_version = '1.3.1' //"1.1.1"

    // For media playback using ExoPlayer
    implementation "androidx.media3:media3-exoplayer:$media3_version"

    // For DASH playback support with ExoPlayer
    //implementation "androidx.media3:media3-exoplayer-dash:$media3_version"
    // For HLS playback support with ExoPlayer
    //implementation "androidx.media3:media3-exoplayer-hls:$media3_version"
    // For RTSP playback support with ExoPlayer
    //implementation "androidx.media3:media3-exoplayer-rtsp:$media3_version"
    // For ad insertion using the Interactive Media Ads SDK with ExoPlayer
    //implementation "androidx.media3:media3-exoplayer-ima:$media3_version"

    // For loading data using the Cronet network stack
    //implementation "androidx.media3:media3-datasource-cronet:$media3_version"
    // For loading data using the OkHttp network stack
    //implementation "androidx.media3:media3-datasource-okhttp:$media3_version"
    // For loading data using librtmp
    //implementation "androidx.media3:media3-datasource-rtmp:$media3_version"

    // For building media playback UIs
    implementation "androidx.media3:media3-ui:$media3_version"
    implementation "androidx.media3:media3-ui-leanback:$media3_version"
    //implementation "androidx.media3:media3-session:$media3_version"
    //implementation "androidx.media3:media3-extractor:$media3_version"
    //implementation "androidx.media3:media3-cast:$media3_version"
    //implementation "androidx.media3:media3-exoplayer-workmanager:$media3_version"
    implementation "androidx.media3:media3-transformer:$media3_version"
    //implementation "androidx.media3:media3-database:$media3_version"
    implementation "androidx.media3:media3-decoder:$media3_version"
    implementation "androidx.media3:media3-datasource:$media3_version"
    implementation "androidx.media3:media3-common:$media3_version"


    //Чтение тегов https://github.com/mpatric/mp3agic
    implementation 'com.mpatric:mp3agic:0.9.1'
    //https://github.com/Kaned1as/jaudiotagger
    implementation 'com.github.Adonai:jaudiotagger:2.3.14'


    //https://youtu.be/eFZmMSm1G1c
    implementation "androidx.core:core-splashscreen:1.0.1"


    implementation 'com.jaredrummler:animated-svg-view:1.0.6'
    implementation 'com.caverock:androidsvg-aar:1.4'

    implementation 'com.github.bumptech.glide:glide:5.0.0-rc01'

    //debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.12'

    //https://github.com/ajitsing/Sherlock
    //debugImplementation('com.github.ajitsing:sherlock:1.0.4@aar') //{
        //transitive = true
    //}
    //releaseImplementation('com.github.ajitsing:sherlock-no-op:1.0.4@aar')


    //implementation 'com.bugsnag:bugsnag-android:6.4.0'
    //implementation 'com.bugsnag:bugsnag-android-performance:1.2.2'

    //https://github.com/wasabeef/Takt
    //releaseImplementation 'jp.wasabeef:takt-no-op:2.1.1'
    //debugImplementation 'jp.wasabeef:takt:2.1.1'




//    // Room
//    implementation("androidx.room:room-runtime:2.6.1")
//    ksp ("androidx.room:room-compiler:2.6.1")
//    implementation ("androidx.room:room-ktx:2.6.1")
//
//    androidTestImplementation "androidx.room:room-testing:2.6.1"

    implementation ("com.github.paramsen:noise:2.0.0")

    //implementation ("org.jetbrains.kotlinx:kotlinx-coroutines-debug:1.6.0")

}

//https://github.com/Skeptick/libres
libres {
    generatedClassName = "MainRes" // "Res" by default
    generateNamedArguments = true // false by default
    baseLocaleLanguageCode = "ru" // "en" by default
    camelCaseNamesForAppleFramework = false // false by default
}

kotlin {
    dependencies {
        implementation("io.github.skeptick.libres:libres-compose:1.2.0")
    }
}
